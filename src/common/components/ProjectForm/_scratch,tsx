
  const [formData, setFormData] = useState<ProjectType>(formDefault);
  const [newPhoto, setNewPhoto] = useState<string>('');
  const [newTag, setNewTag] = useState<string>('');

  useEffect(() => {
    setFormData(project);
  }, [project]);

  function updateTextInput(event: React.ChangeEvent<HTMLInputElement>) {
    event.preventDefault();
    const { name, value } = event.currentTarget;
    const updatedInput = { [name]: value };

    // const _formData = formData;
    // _formData[name] = value;

    // TODO: Google this error....
    setFormData((formData) => ({
      ...formData,
      ...updatedInput
    }));

  };

  function updateCollection(event: React.ChangeEvent<HTMLSelectElement>) {
    const { name, value } = event.currentTarget;
    console.log('collection', name, value);
    console.log('current', formData.collection_id);
    const updatedCollectionName = { collection_name: name };
    const updatedCollectionId = { collection_id: value };

    setFormData((formData) => ({
      ...formData,
      ...updatedCollectionName,
      ...updatedCollectionId
    }));


  };

  function updateDate(event: React.ChangeEvent<HTMLSelectElement>) {
    const { name, value } = event.currentTarget;
    const currentDate = formData.date;
    if (currentDate) {
      currentDate[name as keyof DateType] = value;
    }

    setFormData((formData) => ({
      ...formData,
      ...currentDate,
    }));
  };

  // Could probably be merged with updateTextInput?
  function updatePhoto(event: React.ChangeEvent<HTMLInputElement>) {
    const { value } = event.currentTarget;
    setNewPhoto(value);
  };

  function addPhoto(event: React.MouseEvent<HTMLButtonElement>) {
    const { photos } = formData;
    if (newPhoto) {
      if (photos) {
        photos.push(newPhoto);
      }
      setNewPhoto('');
      setFormData((formData) => ({
        ...formData,
        photos: photos,
      }))
    }
  };

  function deletePhoto(event: React.MouseEvent<HTMLButtonElement>) {
    const index = event.currentTarget.getAttribute('data-photo-index');
    const { photos } = formData;
    if (index) {
      if (photos) {
        photos.splice(parseInt(index), 1);
      }
      setFormData((formData) => ({
        ...formData,
        photos: photos,
      }))
    }
  };

  // Could probably be merged with updateTextInput?
  function updateTag(event: React.ChangeEvent<HTMLInputElement>) {
    const { value } = event.currentTarget;
    setNewTag(value);
  };

  function addTag(event: React.MouseEvent<HTMLButtonElement>) {
    const { tech } = formData;
    if (newTag) {
      if (tech) {
        tech.push(newTag);
      }
      setNewPhoto('');
      setFormData((formData) => ({
        ...formData,
        tech: tech,
      }))
    }
  };

  function deleteTag(event: React.MouseEvent<HTMLButtonElement>) {
    const index = event.currentTarget.getAttribute('data-tag-index');
    const { tech } = formData;
    if (index) {
      if (tech) {
        tech.splice(parseInt(index), 1); // lookup error
      }
      setFormData((formData) => ({
        ...formData,
        tech: tech,
      }))
    };
  };

  // FUNCTIONS
  function saveProjectHandler(event: React.FormEvent) {
    event.preventDefault();
    saveProject(formData);
  };
